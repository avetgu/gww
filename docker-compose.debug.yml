version: '2'
services:
  nginx:
    image: 'gww/gww-server:latest'
    build:
      context: ./gww-server
      dockerfile: Dockerfile
    ports:
      - '80:80'
    links:
      - 'api:api'
  api:
    image: 'gww/gww-api:latest'
    expose:
      - '3000'
    build:
      context: ./gww-api
      dockerfile: Dockerfile
    volumes:
      - './gww-api:/usr/src/app'
    command: bash start.debug.sh
    depends_on:
      - message-queue
    environment:
      - NODE_ENV=production
      - 'AMPQ_ADDRESS=amqp://message-queue:5672'
    links:
      - message-queue
  message-queue:
    image: 'rabbitmq:management'
    expose:
      - '5672'
    ports:
      - '8080:15672'
  db-worker:
    image: 'gww/gww-db:latest'
    build:
      context: ./gww-db
      dockerfile: Dockerfile
    volumes:
      - './gww-db:/usr/src/app'
    command: bash start.debug.sh
    depends_on:
      - message-queue
    environment:
      - 'AMPQ_ADDRESS=amqp://message-queue:5672'
      - 'DATABASE_URL=DB_URL'
      - 'TRANSACTION_DATABASE_URL=T_DB_URL'
    links:
      - message-queue
      - 'db:db'
      - 'transactiondb:transactiondb'
  db:
    image: 'postgres:latest'
    environment:
      - POSTGRES_DB=gww-dev
      - POSTGRES_USER=postgres
    expose:
      - '5432'
    ports:
      - '5432:5432'
  cron:
    image: 'gww/gww-cron:latest'
    build:
      context: ./gww-cron
      dockerfile: Dockerfile
    environment:
      - 'AMPQ_ADDRESS=amqp://message-queue:5672'
      - 'DATABASE_URL=DB_URL'
    links:
      - message-queue
      - 'db:db'
  transactiondb:
    image: 'gww/gww-transactiondb:latest'
    build:
      context: ./
      dockerfile: Dockerfile.transactiondb
    environment:
      - POSTGRES_DB=gww-transactions-dev
      - POSTGRES_USER=postgres
    expose:
      - '5432'
    ports:
      - '5433:5432'
